[tool.cibuildwheel]

[tool.cibuildwheel.linux]
# Get dependencies
before-all = [
    "scripts/docker/cibw_before_all_linux.sh",
]

[tool.cibuildwheel.macos]
# Setting the path does not use brew gcc because the brew gcc is called gcc-12, so need to set CC and CXX explicitly
#environment = { PATH="/usr/local/opt/gcc:$PATH", CC="/usr/local/Cellar/gcc/12.2.0/bin/gcc-12", CXX="/usr/local/Cellar/gcc/12.2.0/bin/g++-12" }
archs = ["x86_64", "universal2", "arm64"]

# Get dependencies
before-all = [
    "scripts/docker/cibw_before_all_macos.sh",
]

# The Anaconda version of szip is out of date, and since it appears first in the DYLD_LIBRARY_PATH, you may need to upgrade it with "conda install -c csdms-stack szip"
# Also see https://cibuildwheel.readthedocs.io/en/stable/faq/#macos-passing-dyld_library_path-to-delocate and https://github.com/pypa/cibuildwheel/issues/816
# NOTE: We removed the --require-archs {delocate_archs} from the delocate-wheel command temporarily. Even when building all MacOS wheels at once, it throws an error.
#repair-wheel-command = [
#    "DYLD_LIBRARY_PATH=/usr/local/Cellar/armadillo/10.8.1/lib delocate-listdeps {wheel}",
#    "DYLD_LIBRARY_PATH=/usr/local/Cellar/armadillo/10.8.1/lib delocate-wheel --require-archs {delocate_archs} -w {dest_dir} {wheel}"
#]
repair-wheel-command = [
    "DYLD_LIBRARY_PATH=/usr/local/Cellar/armadillo/10.8.1/lib:/usr/local/opt/armadillo/lib:/usr/local/opt/libomp/lib:/usr/local/Cellar/libomp/15.0.2/lib delocate-listdeps {wheel}",
    "DYLD_LIBRARY_PATH=/usr/local/Cellar/armadillo/10.8.1/lib:/usr/local/opt/armadillo/lib:/usr/local/opt/libomp/lib:/usr/local/Cellar/libomp/15.0.2/lib delocate-wheel -w {dest_dir} {wheel}"
]


[build-system]
requires = [
    "setuptools>=42",
    "numpy",
    "pybind11",
]